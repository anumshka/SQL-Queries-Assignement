CREATE TABLE Salespeople(
SNUM INT PRIMARY KEY,
SNAME VARCHAR(10) NOT NULL,
CITY VARCHAR(10) NOT NULL,
COMM INT NOT NULL
);

INSERT INTO Salespeople VALUES
(1001,'Peel','London',12),
(1002,'Serres','SanJose',13),
(1004,'Motika','London',11),
(1007,'Rifkin','Barcelona',15),
(1003,'AxelRod','NeyYork',10),
(1008,'Fran','London',25);

CREATE TABLE customers
(CNUM INT PRIMARY KEY,
 CNAME VARCHAR(10) NOT NULL,
 CITY VARCHAR(10) NOT NULL,
 RATING INT NOT NULL,
 SNUM INT REFERENCES Salespeople(SNUM)
);

INSERT INTO customers (CNUM,CNAME,CITY,RATING,SNUM) VALUES 
(2001,'Hoffman','London',100,1001),
(2002,'Giovanni','Rome',200,1003),
(2003,'Liu','SanJose',200,1002),
(2004,'Grass','Berlin',300,1002),
(2006,'Clemens','London',100,1001),
(2008,'Cisneros','SanJose',300,1007),
(2007,'Pereira','Rome',100,1004);


CREATE TABLE orders(
ONUM INT PRIMARY KEY,
AMT NUMERIC(6,2) NOT NULL,
ODATE DATE NOT NULL,
CNUM INT REFERENCES customers(CNUM),
SNUM INT REFERENCES salespeople(SNUM)
);

INSERT INTO orders VALUES
 (3001,18.69,'1990-03-10',2008,1007),
 (3003,767.19,'1990-03-10',2001,1001),
 (3002,1900.10,'1990-03-10',2007,1004),
 (3005,5160.45,'1990-03-10',2003,1002),
 (3006,1098.16,'1990-03-10',2008,1007),
 (3009,1713.23,'1990-04-10',2002,1003),
 (3007,75.75,'1990-04-10',2004,1002),
 (3008,4723.00,'1990-05-10',2006,1001),
 (3010,1309.95,'1990-06-10',2004,1002)           

--3) Find the largest order taken by each salesperson on each date.
SELECT snum,odate,MAX(amt)
FROM orders
GROUP BY snum,odate
ORDER BY snum;

 snum |   odate    |   max   
------+------------+---------
 1001 | 1990-05-10 | 4723.00
 1001 | 1990-06-10 | 9891.88
 1001 | 1990-03-10 |  767.19
 1002 | 1990-06-10 | 1309.95
 1002 | 1990-03-10 | 5160.45
 1002 | 1990-04-10 |   75.75
 1003 | 1990-04-10 | 1713.23
 1004 | 1990-03-10 | 1900.10
 1007 | 1990-03-10 | 1098.16
(9 rows)

--4) Arrange the Order table by descending customer number.
SELECT * FROM orders
ORDER BY cnum DESC;

 onum |   amt   |   odate    | cnum | snum 
------+---------+------------+------+------
 3006 | 1098.16 | 1990-03-10 | 2008 | 1007
 3001 |   18.69 | 1990-03-10 | 2008 | 1007
 3002 | 1900.10 | 1990-03-10 | 2007 | 1004
 3011 | 9891.88 | 1990-06-10 | 2006 | 1001
 3008 | 4723.00 | 1990-05-10 | 2006 | 1001
 3007 |   75.75 | 1990-04-10 | 2004 | 1002
 3010 | 1309.95 | 1990-06-10 | 2004 | 1002
 3005 | 5160.45 | 1990-03-10 | 2003 | 1002
 3009 | 1713.23 | 1990-04-10 | 2002 | 1003
 3003 |  767.19 | 1990-03-10 | 2001 | 1001
(10 rows)

--5) Find which salespeople currently have orders in the order table.
SELECT DISTINCT(snum),sname 
FROM orders NATURAL JOIN salespeople;

 snum |  sname  
------+---------
 1004 | Motika
 1003 | AxelRod
 1007 | Rifkin
 1001 | Peel
 1002 | Serres
(5 rows)

--6) List names of all customers matched with the salespeople serving them.
SELECT cnum,cname,sname
FROM salespeople JOIN customers
ON salespeople.snum = customers.snum;

cnum |  cname   |  sname  
------+----------+---------
 2001 | Hoffman  | Peel
 2002 | Giovanni | AxelRod
 2003 | Liu      | Serres
 2004 | Grass    | Serres
 2006 | Clemens  | Peel
 2008 | Cisneros | Rifkin
 2007 | Pereira  | Motika
(7 rows)

--7) Find the names and numbers of all salespeople who have more than one customer.
SELECT snum,sname
FROM salespeople
WHERE snum IN (SELECT customers.snum
FROM customers JOIN salespeople
ON customers.snum = salespeople.snum
GROUP BY customers.snum
HAVING COUNT(cnum) > 1);

 snum | sname  
------+--------
 1001 | Peel
 1002 | Serres
(2 rows)

--8) Count the orders of each of the salespeople and output the results in descending order.
SELECT salespeople.snum,SUM(AMT)
FROM  salespeople LEFT OUTER JOIN orders 
ON salespeople.snum = orders.snum
GROUP BY salespeople.snum;

 snum |   sum    
------+----------
 1003 |  1713.23
 1004 |  1900.10
 1007 |  1116.85
 1008 |         
 1002 |  6546.15
 1001 | 15382.07
(6 rows)

--9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose.
SELECT * FROM customers
WHERE exists 
(SELECT cnum FROM customers 
WHERE city = 'SanJose');

 cnum |  cname   |  city   | rating | snum 
------+----------+---------+--------+------
 2001 | Hoffman  | London  |    100 | 1001
 2002 | Giovanni | Rome    |    200 | 1003
 2003 | Liu      | SanJose |    200 | 1002
 2004 | Grass    | Berlin  |    300 | 1002
 2006 | Clemens  | London  |    100 | 1001
 2008 | Cisneros | SanJose |    300 | 1007
 2007 | Pereira  | Rome    |    100 | 1004
(7 rows)

--10) Match salespeople to customers according to what city they live in.
SELECT salespeople.snum,sname,cnum,cname
FROM customers JOIN salespeople
ON customers.city = salespeople.city;

 snum | sname  | cnum |  cname   
------+--------+------+----------
 1001 | Peel   | 2006 | Clemens
 1001 | Peel   | 2001 | Hoffman
 1002 | Serres | 2008 | Cisneros
 1002 | Serres | 2003 | Liu
 1004 | Motika | 2006 | Clemens
 1004 | Motika | 2001 | Hoffman
 1008 | Fran   | 2006 | Clemens
 1008 | Fran   | 2001 | Hoffman
(8 rows)

--11) Find all the customers in SanJose who have a rating above 200.
SELECT cnum,cname 
FROM CUSTOMERS 
WHERE rating > 200
AND city = 'SanJose';

 cnum |  cname   
------+----------
 2008 | Cisneros
(1 row)


--12) List the names and commissions of all salespeople in London.
SELECT sname,comm
FROM Salespeople
WHERE city = 'London';

sname  | comm 
--------+------
 Peel   |   12
 Motika |   11
 Fran   |   25
(3 rows)


--13) List all the orders of Salesperson Motika from the orders table.
SELECT onum
FROM orders JOIN salespeople
ON orders.snum = salespeople.snum
WHERE sname='Motika';

onum 
------
 3002
(1 row)


--14) Find all customers who booked orders on October 3. 
SELECT cnum
FROM orders
WHERE odate='1990-03-10';

 cnum 
------
 2008
 2001
 2007
 2003
 2008
(5 rows)


--15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above the maximum Amount
SELECT odate,SUM(amt)
FROM orders o1
GROUP BY odate 
HAVING SUM(amt) >
(SELECT MAX(amt)+2000
FROM orders o2
WHERE o1.odate = o2.odate);


   odate    |   sum   
------------+---------
 1990-03-10 | 8944.59
(1 row)


--16) Select all orders that had amounts that were greater than at least one of the orders from October 6. 
SELECT amt 
FROM orders
WHERE amt > 
ANY(SELECT amt FROM orders WHERE odate = '1990-06-10');

  amt   
---------
 1900.10
 5160.45
 1713.23
 4723.00
 9891.88
(5 rows)


--17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300. 
SELECT snum,sname 
FROM salespeople 
WHERE EXISTS
(SELECT snum 
FROM customers
WHERE rating = 300 
and salespeople.snum = customers.snum );

 snum | sname  
------+--------
 1002 | Serres
 1007 | Rifkin
(2 rows)


--18) Find all customers whose cnum is 1000 above the snum of Serres. 
SELECT cnum 
FROM customers 
WHERE
cnum=1000+
(SELECT snum 
FROM salespeople
WHERE sname = 'Serres');

cnum 
------
 2002
(1 row)


--19) Give the salespeople’s commissions as percentages instead of decimal numbers. 
SELECT comm*100 AS comm
FROM salespeople;

 comm 
------
 1200
 1300
 1100
 1500
 1000
 2500
(6 rows)


--20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000. 
SELECT odate,MAX(amt)
FROM orders
GROUP BY odate
HAVING MAX(amt) < 3000;

 odate    |   max   
------------+---------
 1990-04-10 | 1713.23
(1 row)

--21) List all the largest orders for October 3, for each salesperson. 
SELECT snum,odate,MAX(amt)
FROM orders
GROUP BY snum,odate
HAVING odate='1990-10-03'
ORDER BY snum; 

snum |   odate    |   max   
------+------------+---------
 1001 | 1990-10-03 |  767.19
 1002 | 1990-10-03 | 5160.45
 1004 | 1990-10-03 | 1900.10
 1007 | 1990-10-03 | 1098.16
(4 rows)


--22) Find all customers located in cities where Serres has customers. 
SELECT cnum,cname
FROM customers
WHERE city =
(SELECT city 
FROM salespeople
WHERE sname = 'Serres');

 cnum |  cname   
------+----------
 2003 | Liu
 2008 | Cisneros
(2 rows)

--23) Select all customers with a rating above 200. 
SELECT cnum,cname
FROM customers
WHERE rating > 200;

 cnum |  cname   
------+----------
 2004 | Grass
 2008 | Cisneros
(2 rows)


--24) Count the number of salespeople currently having orders in the orders table. 
SELECT COUNT(DISTINCT(salespeople.snum)) 
FROM salespeople JOIN orders
ON salespeople.snum = orders.snum;

 count 
-------
     5
(1 row)


--25) Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name, salesperson’s name and the salesperson’s rate of commission. 
SELECT cname,sname,comm
FROM customers JOIN salespeople
ON customers.snum = salespeople.snum
WHERE comm > 12 ;

  cname   | sname  | comm 
----------+--------+------
 Liu      | Serres |   13
 Grass    | Serres |   13
 Cisneros | Rifkin |   15
(3 rows)

--26) Find salespeople who have multiple customers. 
SELECT * 
FROM salespeople
WHERE snum  IN (
   SELECT DISTINCT snum
   FROM customers c1
   WHERE EXISTS (
      SELECT * 
      FROM customers c2 
      WHERE c2.snum = c1.snum 
      AND c2.cname <> c1.cname));

 snum | sname  |  city   | comm 
------+--------+---------+------
 1001 | Peel   | London  |   12
 1002 | Serres | SanJose |   13
(2 rows)


--27) Find salespeople with customers located in their own cities. 
SELECT sname,cname 
FROM salespeople JOIN customers
ON salespeople.city = customers.city;

 sname  |  cname   
--------+----------
 Peel   | Clemens
 Peel   | Hoffman
 Serres | Cisneros
 Serres | Liu
 Motika | Clemens
 Motika | Hoffman
 Fran   | Clemens
 Fran   | Hoffman
(8 rows)


--28) Find all salespeople whose name starts with ‘P’ and fourth character is ‘I’. 
SELECT sname 
FROM salespeople
WHERE sname LIKE 'P__i%';

 sname 
-------
(0 rows)


--29) Write a query that uses a subquery to obtain all orders for the customer named ‘Cisneros’. Assume you do not know his customer number. 
SELECT COUNT(onum) 
FROM orders
WHERE cnum = 
(SELECT cnum 
FROM customers
WHERE cname = 'Cisneros');

 count 
-------
     2
(1 row)

--30) Find the largest orders for Serres and Rifkin.
SELECT snum,MAX(amt)
FROM
(SELECT * 
FROM orders
WHERE 
snum IN (SELECT snum
FROM salespeople
WHERE sname = 'Serres' 
OR sname = 'Rifkin')) AS T
GROUP BY snum;


 snum |   max   
------+---------
 1002 | 5160.45
 1007 | 1098.16
(2 rows)

--31) Sort the salespeople table in the following order: snum, sname, commission, city.
SELECT * 
FROM salespeople
ORDER BY snum,sname,comm,city;

 snum |  sname  |   city    | comm 
------+---------+-----------+------
 1001 | Peel    | London    |   12
 1002 | Serres  | SanJose   |   13
 1003 | AxelRod | NeyYork   |   10
 1004 | Motika  | London    |   11
 1007 | Rifkin  | Barcelona |   15
 1008 | Fran    | London    |   25
(6 rows)


--32) Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
SELECT cname 
FROM customers
WHERE cname SIMILAR TO '[A-G]%';

cname   
----------
 Giovanni
 Grass
 Clemens
 Cisneros
(4 rows)

--33) Select all the possible combinations of customers you can assign.


--34) Select all orders that are greater than the average for October 4.
SELECT onum,amt
FROM orders
WHERE amt >
(SELECT AVG(amt) 
FROM orders
WHERE odate = '1990-10-04');

onum |   amt   
------+---------
 3002 | 1900.10
 3005 | 5160.45
 3006 | 1098.16
 3009 | 1713.23
 3008 | 4723.00
 3010 | 1309.95
 3011 | 9891.88
(7 rows)

--35) Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city.
SELECT cnum,cname
FROM customers c1
WHERE 
rating = (SELECT MAX(rating) FROM customers
		 WHERE city=c1.city);

 cnum |  cname   
------+----------
 2001 | Hoffman
 2002 | Giovanni
 2004 | Grass
 2006 | Clemens
 2008 | Cisneros
(5 rows)

--36) Write a query that totals the orders for each day and places the results in descending order.
SELECT odate,SUM(amt)
FROM orders
GROUP BY odate
ORDER BY SUM(amt) DESC;

 odate    |   sum    
------------+----------
 1990-10-06 | 11201.83
 1990-10-03 |  8944.59
 1990-10-05 |  4723.00
 1990-10-04 |  1788.98
(4 rows)

--37) Write a select command that produces the rating followed by the name of each customer in SanJose.
SELECT rating,cname
FROM customers
WHERE city = 'SanJose';

rating |  cname   
--------+----------
    200 | Liu
    300 | Cisneros
(2 rows)

--38) Find all orders with amounts smaller than any amount for a customer in SanJose.
SELECT onum
FROM orders WHERE 
amt < ANY(SELECT amt
FROM customers JOIN orders
ON customers.cnum = orders.cnum
WHERE city = 'SanJose');

onum 
------
 3001
 3003
 3002
 3006
 3009
 3007
 3008
 3010
(8 rows)

--39) Find all orders with above average amounts for their customers.
SELECT * 
FROM orders o1
WHERE amt >
    (SELECT AVG(amt) FROM orders o2
     WHERE o1.cnum = o2.cnum);

onum |   amt   |   odate    | cnum | snum 
------+---------+------------+------+------
 3006 | 1098.16 | 1990-10-03 | 2008 | 1007
 3010 | 1309.95 | 1990-10-06 | 2004 | 1002
 3011 | 9891.88 | 1990-10-06 | 2006 | 1001
(3 rows)

--40) Write a query that selects the highest rating in each city.
SELECT city,MAX(rating)
FROM customers
GROUP BY city;

  city   | max 
---------+-----
 Rome    | 200
 SanJose | 300
 Berlin  | 300
 London  | 100
(4 rows)


